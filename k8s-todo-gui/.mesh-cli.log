2019-09-27T16:13:57.184331Z	info	ReadValuesYAML for profile name: minimal
2019-09-27T16:13:57.184383Z	info	Loading values from compiled in VFS at path profiles/minimal.yaml
2019-09-27T16:13:57.184649Z	info	ReadValuesYAML for profile name: default
2019-09-27T16:13:57.184735Z	info	Loading values from compiled in VFS at path profiles/default.yaml
2019-09-27T16:21:42.180738Z	info	Could not generate manifest: could not unmarshal the overlay file: error decoding object: error unmarshaling JSON: while decoding JSON: Object 'Kind' is missing in '{"autoInjection":{"enabled":false},"configManagement":{"enabled":false},"defaultNamespace":"istio-system","gateways":{"components":{"egressGateway":{"enabled":false},"ingressGateway":{"enabled":true,"k8s":{"hpaSpec":{"maxReplicas":5,"metrics":[{"resource":{"name":"cpu","targetAverageUtilization":80},"type":"Resource"}],"minReplicas":1,"scaleTargetRef":{"apiVersion":"apps/v1","kind":"Deployment","name":"istio-ingressgateway"}},"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}}}},"enabled":true},"hub":"gcr.io/istio-release","policy":{"enabled":false},"security":{"enabled":false},"tag":"release-1.3-latest-daily","telemetry":{"enabled":false},"trafficManagement":{"enabled":false}}'

Original YAML:
autoInjection:
  enabled: false
configManagement:
  enabled: false
defaultNamespace: istio-system
gateways:
  components:
    egressGateway:
      enabled: false
    ingressGateway:
      enabled: true
      k8s:
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              targetAverageUtilization: 80
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-ingressgateway
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
  enabled: true
hub: gcr.io/istio-release
policy:
  enabled: false
security:
  enabled: false
tag: release-1.3-latest-daily
telemetry:
  enabled: false
trafficManagement:
  enabled: false

2019-09-27T16:22:21.538175Z	info	ReadValuesYAML for profile name: [Empty]
2019-09-27T16:22:21.538235Z	info	Loading values from compiled in VFS at path profiles/default.yaml
2019-09-27T16:22:21.583580Z	info	NewVFSRenderer with helmChart=gateways/istio-ingress, componentName=IngressGateway, namespace=istio-system
2019-09-27T16:22:21.583615Z	info	Run VFSRenderer with helmChart=gateways/istio-ingress, componentName=IngressGateway, namespace=istio-system
2019-09-27T16:22:21.583666Z	info	Chart loaded: Chart.yaml
2019-09-27T16:22:21.583752Z	info	Chart loaded: NOTES.txt
2019-09-27T16:22:21.583795Z	info	Chart loaded: templates/_affinity.tpl
2019-09-27T16:22:21.583849Z	info	Chart loaded: templates/addongateway.yaml
2019-09-27T16:22:21.583891Z	info	Chart loaded: templates/autoscale.yaml
2019-09-27T16:22:21.583927Z	info	Chart loaded: templates/certificate.yaml
2019-09-27T16:22:21.584011Z	info	Chart loaded: templates/deployment.yaml
2019-09-27T16:22:21.584047Z	info	Chart loaded: templates/gateway.yaml
2019-09-27T16:22:21.584089Z	info	Chart loaded: templates/hosts.yaml
2019-09-27T16:22:21.584129Z	info	Chart loaded: templates/meshexpansion.yaml
2019-09-27T16:22:21.584157Z	info	Chart loaded: templates/poddisruptionbudget.yaml
2019-09-27T16:22:21.584201Z	info	Chart loaded: templates/preconfigured.yaml
2019-09-27T16:22:21.584235Z	info	Chart loaded: templates/role.yaml
2019-09-27T16:22:21.584264Z	info	Chart loaded: templates/rolebindings.yaml
2019-09-27T16:22:21.584299Z	info	Chart loaded: templates/service.yaml
2019-09-27T16:22:21.584327Z	info	Chart loaded: templates/serviceaccount.yaml
2019-09-27T16:22:21.584353Z	info	Chart loaded: templates/sidecar.yaml
2019-09-27T16:22:21.584432Z	info	Chart loaded: values.yaml
2019-09-27T16:22:21.584644Z	info	NewVFSRenderer with helmChart=crds, componentName=crds, namespace=istio-system
2019-09-27T16:22:21.584660Z	info	Run VFSRenderer with helmChart=crds, componentName=crds, namespace=istio-system
2019-09-27T16:22:21.584709Z	info	Chart loaded: Chart.yaml
2019-09-27T16:22:21.584819Z	info	Chart loaded: files/crd-10.yaml
2019-09-27T16:22:21.584861Z	info	Chart loaded: files/crd-11.yaml
2019-09-27T16:22:21.584893Z	info	Chart loaded: files/crd-12.yaml
2019-09-27T16:22:21.584923Z	info	Chart loaded: files/crd-14.yaml
2019-09-27T16:22:21.584963Z	info	Chart loaded: files/crd-certmanager-10.yaml
2019-09-27T16:22:21.585005Z	info	Chart loaded: files/crd-certmanager-11.yaml
2019-09-27T16:22:21.585040Z	info	Chart loaded: kustomization.yaml
2019-09-27T16:22:21.585078Z	info	Chart loaded: templates/crds.yaml
2019-09-27T16:22:21.585112Z	info	Chart loaded: templates/namespaces.yaml
2019-09-27T16:22:21.588523Z	info	Values translated from IstioControlPlane API:
certmanager:
  enabled: false
  namespace: istio-system
galley:
  enabled: false
  namespace: istio-system
gateways:
  istio-egressgateway:
    enabled: false
    namespace: istio-system
  istio-ingressgateway:
    enabled: true
    namespace: istio-system
global:
  configNamespace: istio-system
  enabled: true
  hub: gcr.io/istio-release
  istioNamespace: istio-system
  namespace: istio-system
  policyNamespace: istio-system
  prometheusNamespace: istio-system
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
mixer:
  policy:
    enabled: false
    namespace: istio-system
  telemetry:
    enabled: false
    namespace: istio-system
nodeagent:
  enabled: false
  namespace: istio-system
pilot:
  enabled: false
  namespace: istio-system
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enabled: false
  namespace: istio-system

2019-09-27T16:22:21.591156Z	info	Values from IstioControlPlaneSpec.Values:
certmanager:
  hub: quay.io/jetstack
  image: cert-manager-controller
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  imagePullPolicy: Always
  imagePullSecrets: []
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  priorityClassName: ""
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
      host: null
      port: null
    envoyMetricsService:
      enabled: false
      host: null
      port: null
    envoyStatsd:
      enabled: false
      host: null
      port: null
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources: null
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    annotations: null
    enabled: false
    hosts:
    - grafana.local
    tls: null
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    loadBalancerIP: null
    loadBalancerSourceRanges: null
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    grafanaURL: null
    jaegerURL: null
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    annotations: null
    enabled: false
    hosts:
    - kiali.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  prometheusNamespace: null
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    image: mixer
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  image: node-agent-k8s
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  deploymentLabels: null
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    annotations: null
    enabled: false
    hosts:
    - prometheus.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  image: sidecar_injector
  injectLabel: istio-injection
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    annotations: null
    enabled: false
    hosts: null
    tls: null
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""

2019-09-27T16:22:21.591212Z	info	Values from IstioControlPlaneSpec.UnvalidatedValues:
{}

2019-09-27T16:22:21.617625Z	info	Merged values:
certmanager:
  enabled: false
  hub: quay.io/jetstack
  image: cert-manager-controller
  namespace: istio-system
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  enabled: false
  namespace: istio-system
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    enabled: false
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    namespace: istio-system
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    enabled: true
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    namespace: istio-system
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configNamespace: istio-system
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  enabled: true
  hub: gcr.io/istio-release
  imagePullPolicy: Always
  imagePullSecrets: []
  istioNamespace: istio-system
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  namespace: istio-system
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  policyNamespace: istio-system
  priorityClassName: ""
  prometheusNamespace: istio-system
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
    envoyMetricsService:
      enabled: false
    envoyStatsd:
      enabled: false
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    enabled: false
    hosts:
    - grafana.local
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    enabled: false
    hosts:
    - kiali.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    enabled: false
    image: mixer
    namespace: istio-system
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    enabled: false
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    namespace: istio-system
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  enabled: false
  image: node-agent-k8s
  namespace: istio-system
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  enabled: false
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  namespace: istio-system
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    enabled: false
    hosts:
    - prometheus.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  enabled: false
  image: sidecar_injector
  injectLabel: istio-injection
  namespace: istio-system
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    enabled: false
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""


2019-09-27T16:22:21.625050Z	info	Initial manifest with merged values:
# Template for telemetry addon gateways







---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingressgateway-service-account
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
---


---



---


---


---


# TODO: range TCP ports, add ports
# 




---
apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: default
  namespace: istio-system
  labels:
    release: istio
spec:
  egress:
    - hosts:
        - "*/*"

---

apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  annotations:
  labels:
    app: istio-ingressgateway
    release: istio
spec:
  type: LoadBalancer
  selector:
    app: istio-ingressgateway
  ports:
    -
      name: status-port
      port: 15020
      targetPort: 15020
    -
      name: http2
      port: 80
      targetPort: 80
    -
      name: https
      port: 443
    -
      name: kiali
      port: 15029
      targetPort: 15029
    -
      name: prometheus
      port: 15030
      targetPort: 15030
    -
      name: grafana
      port: 15031
      targetPort: 15031
    -
      name: tracing
      port: 15032
      targetPort: 15032
    -
      name: tls
      port: 15443
      targetPort: 15443
  
---





---

apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingressgateway
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
    istio: ingressgateway
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      release: istio
      istio: ingressgateway

---

# Main Gateway. Apps must bind to NAMESPACE/ingressgateway
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    release: istio
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
      - "*"
    # Additional ports in gateaway for the ingressPorts - apps using dedicated port instead of hostname


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: istio-ingressgateway
        istio: ingressgateway
        heritage: Tiller
        release: istio
        chart: gateways
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-ingressgateway-service-account
      containers:
        - name: istio-proxy
          image: "gcr.io/istio-release/proxyv2:release-1.3-latest-daily"
          imagePullPolicy: Always
          ports:
            - containerPort: 15020
            - containerPort: 80
            - containerPort: 443
            - containerPort: 15029
            - containerPort: 15030
            - containerPort: 15031
            - containerPort: 15032
            - containerPort: 15443
            - containerPort: 15011
            - containerPort: 8060
            - containerPort: 853
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
          args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --drainDuration
          - '45s' #drainDuration
          - --parentShutdownDuration
          - '1m0s' #parentShutdownDuration
          - --connectTimeout
          - '10s' #connectTimeout
          - --serviceCluster
          - istio-ingressgateway
          - --zipkinAddress
          - zipkin.istio-system:9411
          - --proxyAdminPort
          - "15000"
          - --statusPort
          - "15020"
          - --controlPlaneAuthPolicy
          - MUTUAL_TLS
          - --discoveryAddress
          - istio-pilot.istio-system:15011
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
            
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          volumeMounts:
          
          - name: istio-certs
            mountPath: /etc/certs
            readOnly: true
          - name: ingressgateway-certs
            mountPath: "/etc/istio/ingressgateway-certs"
            readOnly: true
          - name: ingressgateway-ca-certs
            mountPath: "/etc/istio/ingressgateway-ca-certs"
            readOnly: true
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.istio-ingressgateway-service-account
          optional: true
      - name: ingressgateway-certs
        secret:
          secretName: "istio-ingressgateway-certs"
          optional: true
      - name: ingressgateway-ca-certs
        secret:
          secretName: "istio-ingressgateway-ca-certs"
          optional: true
      affinity:      
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x      

---

---



2019-09-27T16:22:21.626721Z	info	Manifest contains the following objects:
2019-09-27T16:22:21.626745Z	info	ServiceAccount:istio-ingressgateway-service-account
2019-09-27T16:22:21.626755Z	info	Sidecar:default
2019-09-27T16:22:21.626762Z	info	Service:istio-ingressgateway
2019-09-27T16:22:21.626769Z	info	HorizontalPodAutoscaler:istio-ingressgateway
2019-09-27T16:22:21.626780Z	info	PodDisruptionBudget:ingressgateway
2019-09-27T16:22:21.626790Z	info	Gateway:ingressgateway
2019-09-27T16:22:21.626800Z	info	Deployment:istio-ingressgateway
2019-09-27T16:22:21.626910Z	info	Checking for path Gateways.Components.IngressGateway.K8S.HpaSpec in IstioControlPlaneSpec
2019-09-27T16:22:21.627261Z	info	path has value in IstioControlPlaneSpec, mapping to output path [HorizontalPodAutoscaler:istio-ingressgateway].spec
2019-09-27T16:22:21.628891Z	info	Checking for path Gateways.Components.IngressGateway.K8S.ImagePullPolicy in IstioControlPlaneSpec
2019-09-27T16:22:21.628922Z	info	path Gateways.Components.IngressGateway.K8S.ImagePullPolicy is empty string, skip mapping.
2019-09-27T16:22:21.628975Z	info	Checking for path Gateways.Components.IngressGateway.K8S.NodeSelector in IstioControlPlaneSpec
2019-09-27T16:22:21.628995Z	info	path Gateways.Components.IngressGateway.K8S.NodeSelector not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.629044Z	info	Checking for path Gateways.Components.IngressGateway.K8S.PodAnnotations in IstioControlPlaneSpec
2019-09-27T16:22:21.629062Z	info	path Gateways.Components.IngressGateway.K8S.PodAnnotations not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.629109Z	info	Checking for path Gateways.Components.IngressGateway.K8S.PriorityClassName in IstioControlPlaneSpec
2019-09-27T16:22:21.629127Z	info	path Gateways.Components.IngressGateway.K8S.PriorityClassName is empty string, skip mapping.
2019-09-27T16:22:21.629181Z	info	Checking for path Gateways.Components.IngressGateway.K8S.Affinity in IstioControlPlaneSpec
2019-09-27T16:22:21.629200Z	info	path Gateways.Components.IngressGateway.K8S.Affinity not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.629246Z	info	Checking for path Gateways.Components.IngressGateway.K8S.Env in IstioControlPlaneSpec
2019-09-27T16:22:21.629283Z	info	path Gateways.Components.IngressGateway.K8S.Env not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.629331Z	info	Checking for path Gateways.Components.IngressGateway.K8S.ReplicaCount in IstioControlPlaneSpec
2019-09-27T16:22:21.629349Z	info	path Gateways.Components.IngressGateway.K8S.ReplicaCount is int 0, skip mapping.
2019-09-27T16:22:21.629403Z	info	Checking for path Gateways.Components.IngressGateway.K8S.Resources in IstioControlPlaneSpec
2019-09-27T16:22:21.629540Z	info	path has value in IstioControlPlaneSpec, mapping to output path [Deployment:istio-ingressgateway].spec.template.spec.containers.[name:istio-proxy].resources
2019-09-27T16:22:21.634364Z	info	Checking for path Gateways.Components.IngressGateway.K8S.PodDisruptionBudget in IstioControlPlaneSpec
2019-09-27T16:22:21.634394Z	info	path Gateways.Components.IngressGateway.K8S.PodDisruptionBudget not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.634450Z	info	Checking for path Gateways.Components.IngressGateway.K8S.ReadinessProbe in IstioControlPlaneSpec
2019-09-27T16:22:21.634469Z	info	path Gateways.Components.IngressGateway.K8S.ReadinessProbe not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.634494Z	info	Manifest after k8s API settings:
# Resources for IngressGateway component

apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingressgateway-service-account
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
---


apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: default
  namespace: istio-system
  labels:
    release: istio
spec:
  egress:
    - hosts:
        - "*/*"
---


apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  annotations:
  labels:
    app: istio-ingressgateway
    release: istio
spec:
  type: LoadBalancer
  selector:
    app: istio-ingressgateway
  ports:
    -
      name: status-port
      port: 15020
      targetPort: 15020
    -
      name: http2
      port: 80
      targetPort: 80
    -
      name: https
      port: 443
    -
      name: kiali
      port: 15029
      targetPort: 15029
    -
      name: prometheus
      port: 15030
      targetPort: 15030
    -
      name: grafana
      port: 15031
      targetPort: 15031
    -
      name: tracing
      port: 15032
      targetPort: 15032
    -
      name: tls
      port: 15443
      targetPort: 15443
---


apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: istio-ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      targetAverageUtilization: 80
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingressgateway

---


apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
    istio: ingressgateway
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      release: istio
      istio: ingressgateway
---


apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    release: istio
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
      - "*"
    # Additional ports in gateaway for the ingressPorts - apps using dedicated port instead of hostname
---


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: istio-ingressgateway
        chart: gateways
        heritage: Tiller
        istio: ingressgateway
        release: istio
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        - --log_output_level=default:info
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --serviceCluster
        - istio-ingressgateway
        - --zipkinAddress
        - zipkin.istio-system:9411
        - --proxyAdminPort
        - "15000"
        - --statusPort
        - "15020"
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --discoveryAddress
        - istio-pilot.istio-system:15011
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        image: gcr.io/istio-release/proxyv2:release-1.3-latest-daily
        imagePullPolicy: Always
        name: istio-proxy
        ports:
        - containerPort: 15020
        - containerPort: 80
        - containerPort: 443
        - containerPort: 15029
        - containerPort: 15030
        - containerPort: 15031
        - containerPort: 15032
        - containerPort: 15443
        - containerPort: 15011
        - containerPort: 8060
        - containerPort: 853
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          readOnly: true
      serviceAccountName: istio-ingressgateway-service-account
      volumes:
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.istio-ingressgateway-service-account
      - name: ingressgateway-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-certs
      - name: ingressgateway-ca-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-ca-certs

---


2019-09-27T16:22:21.637665Z	info	Values translated from IstioControlPlane API:
certmanager:
  enabled: false
  namespace: istio-system
galley:
  enabled: false
  namespace: istio-system
gateways:
  istio-egressgateway:
    enabled: false
    namespace: istio-system
  istio-ingressgateway:
    enabled: true
    namespace: istio-system
global:
  configNamespace: istio-system
  enabled: true
  hub: gcr.io/istio-release
  istioNamespace: istio-system
  namespace: istio-system
  policyNamespace: istio-system
  prometheusNamespace: istio-system
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
mixer:
  policy:
    enabled: false
    namespace: istio-system
  telemetry:
    enabled: false
    namespace: istio-system
nodeagent:
  enabled: false
  namespace: istio-system
pilot:
  enabled: false
  namespace: istio-system
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enabled: false
  namespace: istio-system

2019-09-27T16:22:21.640365Z	info	Values from IstioControlPlaneSpec.Values:
certmanager:
  hub: quay.io/jetstack
  image: cert-manager-controller
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  imagePullPolicy: Always
  imagePullSecrets: []
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  priorityClassName: ""
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
      host: null
      port: null
    envoyMetricsService:
      enabled: false
      host: null
      port: null
    envoyStatsd:
      enabled: false
      host: null
      port: null
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources: null
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    annotations: null
    enabled: false
    hosts:
    - grafana.local
    tls: null
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    loadBalancerIP: null
    loadBalancerSourceRanges: null
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    grafanaURL: null
    jaegerURL: null
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    annotations: null
    enabled: false
    hosts:
    - kiali.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  prometheusNamespace: null
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    image: mixer
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  image: node-agent-k8s
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  deploymentLabels: null
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    annotations: null
    enabled: false
    hosts:
    - prometheus.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  image: sidecar_injector
  injectLabel: istio-injection
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    annotations: null
    enabled: false
    hosts: null
    tls: null
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""

2019-09-27T16:22:21.640424Z	info	Values from IstioControlPlaneSpec.UnvalidatedValues:
{}

2019-09-27T16:22:21.665430Z	info	Merged values:
certmanager:
  enabled: false
  hub: quay.io/jetstack
  image: cert-manager-controller
  namespace: istio-system
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  enabled: false
  namespace: istio-system
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    enabled: false
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    namespace: istio-system
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    enabled: true
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    namespace: istio-system
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configNamespace: istio-system
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  enabled: true
  hub: gcr.io/istio-release
  imagePullPolicy: Always
  imagePullSecrets: []
  istioNamespace: istio-system
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  namespace: istio-system
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  policyNamespace: istio-system
  priorityClassName: ""
  prometheusNamespace: istio-system
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
    envoyMetricsService:
      enabled: false
    envoyStatsd:
      enabled: false
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    enabled: false
    hosts:
    - grafana.local
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    enabled: false
    hosts:
    - kiali.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    enabled: false
    image: mixer
    namespace: istio-system
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    enabled: false
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    namespace: istio-system
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  enabled: false
  image: node-agent-k8s
  namespace: istio-system
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  enabled: false
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  namespace: istio-system
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    enabled: false
    hosts:
    - prometheus.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  enabled: false
  image: sidecar_injector
  injectLabel: istio-injection
  namespace: istio-system
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    enabled: false
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""


2019-09-27T16:22:21.668405Z	info	Initial manifest with merged values:
# To prevent accidental injection into istio control plane namespaces.
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-operator-managed: Reconcile
    istio-injection: disabled
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: virtualservices.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
    shortNames:
    - vs
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.gateways
    description: The names of gateways and sidecars that should apply these routes
    name: Gateways
    type: string
  - JSONPath: .spec.hosts
    description: The destination hosts to which traffic is being sent
    name: Hosts
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: destinationrules.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: DestinationRule
    listKind: DestinationRuleList
    plural: destinationrules
    singular: destinationrule
    shortNames:
    - dr
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.host
    description: The name of a service from the service registry
    name: Host
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serviceentries.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: ServiceEntry
    listKind: ServiceEntryList
    plural: serviceentries
    singular: serviceentry
    shortNames:
    - se
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.hosts
    description: The hosts associated with the ServiceEntry
    name: Hosts
    type: string
  - JSONPath: .spec.location
    description: Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)
    name: Location
    type: string
  - JSONPath: .spec.resolution
    description: Service discovery mode for the hosts (NONE, STATIC, or DNS)
    name: Resolution
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gateways.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Gateway
    plural: gateways
    singular: gateway
    shortNames:
    - gw
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: envoyfilters.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: EnvoyFilter
    plural: envoyfilters
    singular: envoyfilter
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: clusterrbacconfigs.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ClusterRbacConfig
    plural: clusterrbacconfigs
    singular: clusterrbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: policies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: Policy
    plural: policies
    singular: policy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: meshpolicies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: MeshPolicy
    listKind: MeshPolicyList
    plural: meshpolicies
    singular: meshpolicy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpecBinding
    plural: httpapispecbindings
    singular: httpapispecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpec
    plural: httpapispecs
    singular: httpapispec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpecBinding
    plural: quotaspecbindings
    singular: quotaspecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpec
    plural: quotaspecs
    singular: quotaspec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rules.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: rule
    plural: rules
    singular: rule
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: attributemanifests.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: attributemanifest
    plural: attributemanifests
    singular: attributemanifest
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rbacconfigs.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: RbacConfig
    plural: rbacconfigs
    singular: rbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: serviceroles.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRole
    plural: serviceroles
    singular: servicerole
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: servicerolebindings.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRoleBinding
    plural: servicerolebindings
    singular: servicerolebinding
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.roleRef.name
    description: The name of the ServiceRole object being referenced
    name: Reference
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: adapters.config.istio.io
  labels:
    app: mixer
    package: adapter
    istio: mixer-adapter
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: adapter
    plural: adapters
    singular: adapter
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: instances.config.istio.io
  labels:
    app: mixer
    package: instance
    istio: mixer-instance
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: instance
    plural: instances
    singular: instance
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: templates.config.istio.io
  labels:
    app: mixer
    package: template
    istio: mixer-template
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: template
    plural: templates
    singular: template
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: handlers.config.istio.io
  labels:
    app: mixer
    package: handler
    istio: mixer-handler
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: handler
    plural: handlers
    singular: handler
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sidecars.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Sidecar
    plural: sidecars
    singular: sidecar
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---

kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: authorizationpolicies.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: AuthorizationPolicy
    plural: authorizationpolicies
    singular: authorizationpolicy
    categories:
      - istio-io
      - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


---



2019-09-27T16:22:21.671640Z	info	Manifest contains the following objects:
2019-09-27T16:22:21.671660Z	info	Namespace:istio-system
2019-09-27T16:22:21.671674Z	info	CustomResourceDefinition:virtualservices.networking.istio.io
2019-09-27T16:22:21.671682Z	info	CustomResourceDefinition:destinationrules.networking.istio.io
2019-09-27T16:22:21.671700Z	info	CustomResourceDefinition:serviceentries.networking.istio.io
2019-09-27T16:22:21.671711Z	info	CustomResourceDefinition:gateways.networking.istio.io
2019-09-27T16:22:21.671718Z	info	CustomResourceDefinition:envoyfilters.networking.istio.io
2019-09-27T16:22:21.671727Z	info	CustomResourceDefinition:clusterrbacconfigs.rbac.istio.io
2019-09-27T16:22:21.671736Z	info	CustomResourceDefinition:policies.authentication.istio.io
2019-09-27T16:22:21.671743Z	info	CustomResourceDefinition:meshpolicies.authentication.istio.io
2019-09-27T16:22:21.671749Z	info	CustomResourceDefinition:httpapispecbindings.config.istio.io
2019-09-27T16:22:21.671756Z	info	CustomResourceDefinition:httpapispecs.config.istio.io
2019-09-27T16:22:21.671775Z	info	CustomResourceDefinition:quotaspecbindings.config.istio.io
2019-09-27T16:22:21.671790Z	info	CustomResourceDefinition:quotaspecs.config.istio.io
2019-09-27T16:22:21.671797Z	info	CustomResourceDefinition:rules.config.istio.io
2019-09-27T16:22:21.671803Z	info	CustomResourceDefinition:attributemanifests.config.istio.io
2019-09-27T16:22:21.671821Z	info	CustomResourceDefinition:rbacconfigs.rbac.istio.io
2019-09-27T16:22:21.671831Z	info	CustomResourceDefinition:serviceroles.rbac.istio.io
2019-09-27T16:22:21.671840Z	info	CustomResourceDefinition:servicerolebindings.rbac.istio.io
2019-09-27T16:22:21.671849Z	info	CustomResourceDefinition:adapters.config.istio.io
2019-09-27T16:22:21.671858Z	info	CustomResourceDefinition:instances.config.istio.io
2019-09-27T16:22:21.671867Z	info	CustomResourceDefinition:templates.config.istio.io
2019-09-27T16:22:21.671876Z	info	CustomResourceDefinition:handlers.config.istio.io
2019-09-27T16:22:21.671885Z	info	CustomResourceDefinition:sidecars.networking.istio.io
2019-09-27T16:22:21.671894Z	info	CustomResourceDefinition:authorizationpolicies.rbac.istio.io
2019-09-27T16:22:21.671988Z	info	Checking for path Base.Components.crds.K8S.Affinity in IstioControlPlaneSpec
2019-09-27T16:22:21.672018Z	info	path Base.Components.crds.K8S.Affinity not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672065Z	info	Checking for path Base.Components.crds.K8S.Env in IstioControlPlaneSpec
2019-09-27T16:22:21.672082Z	info	path Base.Components.crds.K8S.Env not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672128Z	info	Checking for path Base.Components.crds.K8S.HpaSpec in IstioControlPlaneSpec
2019-09-27T16:22:21.672144Z	info	path Base.Components.crds.K8S.HpaSpec not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672195Z	info	Checking for path Base.Components.crds.K8S.ImagePullPolicy in IstioControlPlaneSpec
2019-09-27T16:22:21.672209Z	info	path Base.Components.crds.K8S.ImagePullPolicy not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672261Z	info	Checking for path Base.Components.crds.K8S.NodeSelector in IstioControlPlaneSpec
2019-09-27T16:22:21.672278Z	info	path Base.Components.crds.K8S.NodeSelector not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672322Z	info	Checking for path Base.Components.crds.K8S.PodAnnotations in IstioControlPlaneSpec
2019-09-27T16:22:21.672339Z	info	path Base.Components.crds.K8S.PodAnnotations not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672383Z	info	Checking for path Base.Components.crds.K8S.PriorityClassName in IstioControlPlaneSpec
2019-09-27T16:22:21.672406Z	info	path Base.Components.crds.K8S.PriorityClassName not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672452Z	info	Checking for path Base.Components.crds.K8S.PodDisruptionBudget in IstioControlPlaneSpec
2019-09-27T16:22:21.672468Z	info	path Base.Components.crds.K8S.PodDisruptionBudget not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672512Z	info	Checking for path Base.Components.crds.K8S.ReadinessProbe in IstioControlPlaneSpec
2019-09-27T16:22:21.672527Z	info	path Base.Components.crds.K8S.ReadinessProbe not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672573Z	info	Checking for path Base.Components.crds.K8S.ReplicaCount in IstioControlPlaneSpec
2019-09-27T16:22:21.672589Z	info	path Base.Components.crds.K8S.ReplicaCount not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672642Z	info	Checking for path Base.Components.crds.K8S.Resources in IstioControlPlaneSpec
2019-09-27T16:22:21.672658Z	info	path Base.Components.crds.K8S.Resources not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:22:21.672685Z	info	Manifest after k8s API settings:
# Resources for crds component

apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-operator-managed: Reconcile
    istio-injection: disabled
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: virtualservices.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
    shortNames:
    - vs
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.gateways
    description: The names of gateways and sidecars that should apply these routes
    name: Gateways
    type: string
  - JSONPath: .spec.hosts
    description: The destination hosts to which traffic is being sent
    name: Hosts
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: destinationrules.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: DestinationRule
    listKind: DestinationRuleList
    plural: destinationrules
    singular: destinationrule
    shortNames:
    - dr
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.host
    description: The name of a service from the service registry
    name: Host
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serviceentries.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: ServiceEntry
    listKind: ServiceEntryList
    plural: serviceentries
    singular: serviceentry
    shortNames:
    - se
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.hosts
    description: The hosts associated with the ServiceEntry
    name: Hosts
    type: string
  - JSONPath: .spec.location
    description: Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)
    name: Location
    type: string
  - JSONPath: .spec.resolution
    description: Service discovery mode for the hosts (NONE, STATIC, or DNS)
    name: Resolution
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gateways.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Gateway
    plural: gateways
    singular: gateway
    shortNames:
    - gw
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: envoyfilters.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: EnvoyFilter
    plural: envoyfilters
    singular: envoyfilter
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: clusterrbacconfigs.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ClusterRbacConfig
    plural: clusterrbacconfigs
    singular: clusterrbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: policies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: Policy
    plural: policies
    singular: policy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: meshpolicies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: MeshPolicy
    listKind: MeshPolicyList
    plural: meshpolicies
    singular: meshpolicy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpecBinding
    plural: httpapispecbindings
    singular: httpapispecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpec
    plural: httpapispecs
    singular: httpapispec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpecBinding
    plural: quotaspecbindings
    singular: quotaspecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpec
    plural: quotaspecs
    singular: quotaspec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rules.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: rule
    plural: rules
    singular: rule
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: attributemanifests.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: attributemanifest
    plural: attributemanifests
    singular: attributemanifest
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rbacconfigs.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: RbacConfig
    plural: rbacconfigs
    singular: rbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: serviceroles.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRole
    plural: serviceroles
    singular: servicerole
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: servicerolebindings.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRoleBinding
    plural: servicerolebindings
    singular: servicerolebinding
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.roleRef.name
    description: The name of the ServiceRole object being referenced
    name: Reference
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: adapters.config.istio.io
  labels:
    app: mixer
    package: adapter
    istio: mixer-adapter
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: adapter
    plural: adapters
    singular: adapter
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: instances.config.istio.io
  labels:
    app: mixer
    package: instance
    istio: mixer-instance
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: instance
    plural: instances
    singular: instance
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: templates.config.istio.io
  labels:
    app: mixer
    package: template
    istio: mixer-template
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: template
    plural: templates
    singular: template
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: handlers.config.istio.io
  labels:
    app: mixer
    package: handler
    istio: mixer-handler
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: handler
    plural: handlers
    singular: handler
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sidecars.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Sidecar
    plural: sidecars
    singular: sidecar
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: authorizationpolicies.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: AuthorizationPolicy
    plural: authorizationpolicies
    singular: authorizationpolicy
    categories:
      - istio-io
      - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


2019-09-27T16:22:21.672720Z	info	Applying manifests for these components:
2019-09-27T16:22:21.672745Z	info	- IngressGateway
2019-09-27T16:22:21.672761Z	info	- crds
2019-09-27T16:22:21.672781Z	info	Component dependencies tree: 
crds
  Policy
  Galley
  Citadel
  NodeAgent
  Injector
  IngressGateway
  Pilot
  Telemetry
  CertManager
  EgressGateway

2019-09-27T16:22:21.674267Z	info	IngressGateway is waiting on parent dependency...
2019-09-27T16:22:21.678221Z	info	kubectl applying manifest for component crds
2019-09-27T16:22:21.678857Z	info	applying to namespace :
kubectl apply --force --selector operator.istio.io/managed=Reconcile -f - <use --verbose to see manifest string> 


2019-09-27T16:22:21.887764Z	info	error running kubectl apply: exit status 1
2019-09-27T16:22:21.887852Z	info	Waiting for CRDs to be applied.
2019-09-27T16:22:22.397256Z	info	failed to verify CRD creation; Get https://35.197.211.102/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/adapters.config.istio.io: dial tcp 35.197.211.102:443: connect: connection refused
2019-09-27T16:22:22.397312Z	info	unblocking child dependency Pilot.
2019-09-27T16:22:22.397326Z	info	unblocking child dependency Policy.
2019-09-27T16:22:22.397337Z	info	unblocking child dependency Telemetry.
2019-09-27T16:22:22.397348Z	info	unblocking child dependency Galley.
2019-09-27T16:22:22.397359Z	info	unblocking child dependency Citadel.
2019-09-27T16:22:22.397370Z	info	unblocking child dependency NodeAgent.
2019-09-27T16:22:22.397380Z	info	unblocking child dependency CertManager.
2019-09-27T16:22:22.397391Z	info	unblocking child dependency Injector.
2019-09-27T16:22:22.397403Z	info	unblocking child dependency IngressGateway.
2019-09-27T16:22:22.397426Z	info	unblocking child dependency EgressGateway.
2019-09-27T16:22:22.397477Z	info	Parent dependency for IngressGateway has unblocked, proceeding.
2019-09-27T16:22:22.400009Z	info	kubectl applying manifest for component IngressGateway
2019-09-27T16:22:22.400476Z	info	applying to namespace istio-system:
kubectl apply -n istio-system --force --selector operator.istio.io/managed=Reconcile -f - <use --verbose to see manifest string> 


2019-09-27T16:22:22.507651Z	info	error running kubectl apply: exit status 1
2019-09-27T16:22:22.507744Z	info	finished applying manifest for component IngressGateway
2019-09-27T16:22:22.511722Z	info	
Output for component IngressGateway:
====================================

2019-09-27T16:22:22.511757Z	info	Error: error from running kubectl apply: exit status 1

2019-09-27T16:22:22.511774Z	info	Error detail:

unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused


2019-09-27T16:22:22.511787Z	info	
Output for component crds:
==========================

2019-09-27T16:22:22.511836Z	info	Error: failed to verify CRD creation: Get https://35.197.211.102/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/adapters.config.istio.io: dial tcp 35.197.211.102:443: connect: connection refused

2019-09-27T16:22:22.511968Z	info	Error detail:
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused
unable to recognize "STDIN": Get https://35.197.211.102/api?timeout=32s: dial tcp 35.197.211.102:443: connect: connection refused


2019-09-27T16:27:15.829982Z	info	ReadValuesYAML for profile name: [Empty]
2019-09-27T16:27:15.830066Z	info	Loading values from compiled in VFS at path profiles/default.yaml
2019-09-27T16:27:15.879274Z	info	NewVFSRenderer with helmChart=crds, componentName=crds, namespace=istio-system
2019-09-27T16:27:15.879316Z	info	Run VFSRenderer with helmChart=crds, componentName=crds, namespace=istio-system
2019-09-27T16:27:15.879379Z	info	Chart loaded: Chart.yaml
2019-09-27T16:27:15.879467Z	info	Chart loaded: files/crd-10.yaml
2019-09-27T16:27:15.879502Z	info	Chart loaded: files/crd-11.yaml
2019-09-27T16:27:15.879534Z	info	Chart loaded: files/crd-12.yaml
2019-09-27T16:27:15.879566Z	info	Chart loaded: files/crd-14.yaml
2019-09-27T16:27:15.879638Z	info	Chart loaded: files/crd-certmanager-10.yaml
2019-09-27T16:27:15.880111Z	info	Chart loaded: files/crd-certmanager-11.yaml
2019-09-27T16:27:15.880222Z	info	Chart loaded: kustomization.yaml
2019-09-27T16:27:15.880341Z	info	Chart loaded: templates/crds.yaml
2019-09-27T16:27:15.880499Z	info	Chart loaded: templates/namespaces.yaml
2019-09-27T16:27:15.880788Z	info	NewVFSRenderer with helmChart=gateways/istio-ingress, componentName=IngressGateway, namespace=istio-system
2019-09-27T16:27:15.880805Z	info	Run VFSRenderer with helmChart=gateways/istio-ingress, componentName=IngressGateway, namespace=istio-system
2019-09-27T16:27:15.880848Z	info	Chart loaded: Chart.yaml
2019-09-27T16:27:15.880899Z	info	Chart loaded: NOTES.txt
2019-09-27T16:27:15.880951Z	info	Chart loaded: templates/_affinity.tpl
2019-09-27T16:27:15.880994Z	info	Chart loaded: templates/addongateway.yaml
2019-09-27T16:27:15.881035Z	info	Chart loaded: templates/autoscale.yaml
2019-09-27T16:27:15.881084Z	info	Chart loaded: templates/certificate.yaml
2019-09-27T16:27:15.881208Z	info	Chart loaded: templates/deployment.yaml
2019-09-27T16:27:15.881255Z	info	Chart loaded: templates/gateway.yaml
2019-09-27T16:27:15.881300Z	info	Chart loaded: templates/hosts.yaml
2019-09-27T16:27:15.881346Z	info	Chart loaded: templates/meshexpansion.yaml
2019-09-27T16:27:15.881378Z	info	Chart loaded: templates/poddisruptionbudget.yaml
2019-09-27T16:27:15.881440Z	info	Chart loaded: templates/preconfigured.yaml
2019-09-27T16:27:15.881484Z	info	Chart loaded: templates/role.yaml
2019-09-27T16:27:15.881528Z	info	Chart loaded: templates/rolebindings.yaml
2019-09-27T16:27:15.881582Z	info	Chart loaded: templates/service.yaml
2019-09-27T16:27:15.881624Z	info	Chart loaded: templates/serviceaccount.yaml
2019-09-27T16:27:15.881680Z	info	Chart loaded: templates/sidecar.yaml
2019-09-27T16:27:15.881766Z	info	Chart loaded: values.yaml
2019-09-27T16:27:15.885253Z	info	Values translated from IstioControlPlane API:
certmanager:
  enabled: false
  namespace: istio-system
galley:
  enabled: false
  namespace: istio-system
gateways:
  istio-egressgateway:
    enabled: false
    namespace: istio-system
  istio-ingressgateway:
    enabled: true
    namespace: istio-system
global:
  configNamespace: istio-system
  enabled: true
  hub: gcr.io/istio-release
  istioNamespace: istio-system
  namespace: istio-system
  policyNamespace: istio-system
  prometheusNamespace: istio-system
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
mixer:
  policy:
    enabled: false
    namespace: istio-system
  telemetry:
    enabled: false
    namespace: istio-system
nodeagent:
  enabled: false
  namespace: istio-system
pilot:
  enabled: false
  namespace: istio-system
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enabled: false
  namespace: istio-system

2019-09-27T16:27:15.889813Z	info	Values from IstioControlPlaneSpec.Values:
certmanager:
  hub: quay.io/jetstack
  image: cert-manager-controller
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  imagePullPolicy: Always
  imagePullSecrets: []
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  priorityClassName: ""
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
      host: null
      port: null
    envoyMetricsService:
      enabled: false
      host: null
      port: null
    envoyStatsd:
      enabled: false
      host: null
      port: null
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources: null
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    annotations: null
    enabled: false
    hosts:
    - grafana.local
    tls: null
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    loadBalancerIP: null
    loadBalancerSourceRanges: null
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    grafanaURL: null
    jaegerURL: null
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    annotations: null
    enabled: false
    hosts:
    - kiali.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  prometheusNamespace: null
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    image: mixer
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  image: node-agent-k8s
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  deploymentLabels: null
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    annotations: null
    enabled: false
    hosts:
    - prometheus.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  image: sidecar_injector
  injectLabel: istio-injection
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    annotations: null
    enabled: false
    hosts: null
    tls: null
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""

2019-09-27T16:27:15.889905Z	info	Values from IstioControlPlaneSpec.UnvalidatedValues:
{}

2019-09-27T16:27:15.918143Z	info	Merged values:
certmanager:
  enabled: false
  hub: quay.io/jetstack
  image: cert-manager-controller
  namespace: istio-system
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  enabled: false
  namespace: istio-system
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    enabled: false
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    namespace: istio-system
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    enabled: true
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    namespace: istio-system
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configNamespace: istio-system
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  enabled: true
  hub: gcr.io/istio-release
  imagePullPolicy: Always
  imagePullSecrets: []
  istioNamespace: istio-system
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  namespace: istio-system
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  policyNamespace: istio-system
  priorityClassName: ""
  prometheusNamespace: istio-system
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
    envoyMetricsService:
      enabled: false
    envoyStatsd:
      enabled: false
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    enabled: false
    hosts:
    - grafana.local
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    enabled: false
    hosts:
    - kiali.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    enabled: false
    image: mixer
    namespace: istio-system
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    enabled: false
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    namespace: istio-system
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  enabled: false
  image: node-agent-k8s
  namespace: istio-system
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  enabled: false
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  namespace: istio-system
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    enabled: false
    hosts:
    - prometheus.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  enabled: false
  image: sidecar_injector
  injectLabel: istio-injection
  namespace: istio-system
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    enabled: false
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""


2019-09-27T16:27:15.920939Z	info	Initial manifest with merged values:
# To prevent accidental injection into istio control plane namespaces.
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-operator-managed: Reconcile
    istio-injection: disabled
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: virtualservices.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
    shortNames:
    - vs
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.gateways
    description: The names of gateways and sidecars that should apply these routes
    name: Gateways
    type: string
  - JSONPath: .spec.hosts
    description: The destination hosts to which traffic is being sent
    name: Hosts
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: destinationrules.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: DestinationRule
    listKind: DestinationRuleList
    plural: destinationrules
    singular: destinationrule
    shortNames:
    - dr
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.host
    description: The name of a service from the service registry
    name: Host
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serviceentries.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: ServiceEntry
    listKind: ServiceEntryList
    plural: serviceentries
    singular: serviceentry
    shortNames:
    - se
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.hosts
    description: The hosts associated with the ServiceEntry
    name: Hosts
    type: string
  - JSONPath: .spec.location
    description: Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)
    name: Location
    type: string
  - JSONPath: .spec.resolution
    description: Service discovery mode for the hosts (NONE, STATIC, or DNS)
    name: Resolution
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gateways.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Gateway
    plural: gateways
    singular: gateway
    shortNames:
    - gw
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: envoyfilters.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: EnvoyFilter
    plural: envoyfilters
    singular: envoyfilter
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: clusterrbacconfigs.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ClusterRbacConfig
    plural: clusterrbacconfigs
    singular: clusterrbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: policies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: Policy
    plural: policies
    singular: policy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: meshpolicies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: MeshPolicy
    listKind: MeshPolicyList
    plural: meshpolicies
    singular: meshpolicy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpecBinding
    plural: httpapispecbindings
    singular: httpapispecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpec
    plural: httpapispecs
    singular: httpapispec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpecBinding
    plural: quotaspecbindings
    singular: quotaspecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpec
    plural: quotaspecs
    singular: quotaspec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rules.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: rule
    plural: rules
    singular: rule
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: attributemanifests.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: attributemanifest
    plural: attributemanifests
    singular: attributemanifest
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rbacconfigs.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: RbacConfig
    plural: rbacconfigs
    singular: rbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: serviceroles.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRole
    plural: serviceroles
    singular: servicerole
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: servicerolebindings.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRoleBinding
    plural: servicerolebindings
    singular: servicerolebinding
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.roleRef.name
    description: The name of the ServiceRole object being referenced
    name: Reference
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: adapters.config.istio.io
  labels:
    app: mixer
    package: adapter
    istio: mixer-adapter
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: adapter
    plural: adapters
    singular: adapter
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: instances.config.istio.io
  labels:
    app: mixer
    package: instance
    istio: mixer-instance
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: instance
    plural: instances
    singular: instance
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: templates.config.istio.io
  labels:
    app: mixer
    package: template
    istio: mixer-template
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: template
    plural: templates
    singular: template
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---
kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: handlers.config.istio.io
  labels:
    app: mixer
    package: handler
    istio: mixer-handler
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: handler
    plural: handlers
    singular: handler
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sidecars.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Sidecar
    plural: sidecars
    singular: sidecar
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---

kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: authorizationpolicies.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: AuthorizationPolicy
    plural: authorizationpolicies
    singular: authorizationpolicy
    categories:
      - istio-io
      - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


---



2019-09-27T16:27:15.924734Z	info	Manifest contains the following objects:
2019-09-27T16:27:15.924771Z	info	Namespace:istio-system
2019-09-27T16:27:15.924783Z	info	CustomResourceDefinition:virtualservices.networking.istio.io
2019-09-27T16:27:15.924793Z	info	CustomResourceDefinition:destinationrules.networking.istio.io
2019-09-27T16:27:15.924803Z	info	CustomResourceDefinition:serviceentries.networking.istio.io
2019-09-27T16:27:15.924813Z	info	CustomResourceDefinition:gateways.networking.istio.io
2019-09-27T16:27:15.924823Z	info	CustomResourceDefinition:envoyfilters.networking.istio.io
2019-09-27T16:27:15.924832Z	info	CustomResourceDefinition:clusterrbacconfigs.rbac.istio.io
2019-09-27T16:27:15.924842Z	info	CustomResourceDefinition:policies.authentication.istio.io
2019-09-27T16:27:15.924860Z	info	CustomResourceDefinition:meshpolicies.authentication.istio.io
2019-09-27T16:27:15.924880Z	info	CustomResourceDefinition:httpapispecbindings.config.istio.io
2019-09-27T16:27:15.924890Z	info	CustomResourceDefinition:httpapispecs.config.istio.io
2019-09-27T16:27:15.924900Z	info	CustomResourceDefinition:quotaspecbindings.config.istio.io
2019-09-27T16:27:15.924910Z	info	CustomResourceDefinition:quotaspecs.config.istio.io
2019-09-27T16:27:15.924920Z	info	CustomResourceDefinition:rules.config.istio.io
2019-09-27T16:27:15.924930Z	info	CustomResourceDefinition:attributemanifests.config.istio.io
2019-09-27T16:27:15.924940Z	info	CustomResourceDefinition:rbacconfigs.rbac.istio.io
2019-09-27T16:27:15.924951Z	info	CustomResourceDefinition:serviceroles.rbac.istio.io
2019-09-27T16:27:15.924963Z	info	CustomResourceDefinition:servicerolebindings.rbac.istio.io
2019-09-27T16:27:15.924979Z	info	CustomResourceDefinition:adapters.config.istio.io
2019-09-27T16:27:15.924997Z	info	CustomResourceDefinition:instances.config.istio.io
2019-09-27T16:27:15.925012Z	info	CustomResourceDefinition:templates.config.istio.io
2019-09-27T16:27:15.925027Z	info	CustomResourceDefinition:handlers.config.istio.io
2019-09-27T16:27:15.925041Z	info	CustomResourceDefinition:sidecars.networking.istio.io
2019-09-27T16:27:15.925057Z	info	CustomResourceDefinition:authorizationpolicies.rbac.istio.io
2019-09-27T16:27:15.925266Z	info	Checking for path Base.Components.crds.K8S.HpaSpec in IstioControlPlaneSpec
2019-09-27T16:27:15.925300Z	info	path Base.Components.crds.K8S.HpaSpec not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925375Z	info	Checking for path Base.Components.crds.K8S.ImagePullPolicy in IstioControlPlaneSpec
2019-09-27T16:27:15.925402Z	info	path Base.Components.crds.K8S.ImagePullPolicy not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925491Z	info	Checking for path Base.Components.crds.K8S.NodeSelector in IstioControlPlaneSpec
2019-09-27T16:27:15.925512Z	info	path Base.Components.crds.K8S.NodeSelector not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925564Z	info	Checking for path Base.Components.crds.K8S.PodDisruptionBudget in IstioControlPlaneSpec
2019-09-27T16:27:15.925582Z	info	path Base.Components.crds.K8S.PodDisruptionBudget not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925636Z	info	Checking for path Base.Components.crds.K8S.PodAnnotations in IstioControlPlaneSpec
2019-09-27T16:27:15.925654Z	info	path Base.Components.crds.K8S.PodAnnotations not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925704Z	info	Checking for path Base.Components.crds.K8S.ReadinessProbe in IstioControlPlaneSpec
2019-09-27T16:27:15.925731Z	info	path Base.Components.crds.K8S.ReadinessProbe not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925780Z	info	Checking for path Base.Components.crds.K8S.ReplicaCount in IstioControlPlaneSpec
2019-09-27T16:27:15.925797Z	info	path Base.Components.crds.K8S.ReplicaCount not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925846Z	info	Checking for path Base.Components.crds.K8S.Affinity in IstioControlPlaneSpec
2019-09-27T16:27:15.925863Z	info	path Base.Components.crds.K8S.Affinity not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.925909Z	info	Checking for path Base.Components.crds.K8S.Resources in IstioControlPlaneSpec
2019-09-27T16:27:15.925926Z	info	path Base.Components.crds.K8S.Resources not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.926027Z	info	Checking for path Base.Components.crds.K8S.PriorityClassName in IstioControlPlaneSpec
2019-09-27T16:27:15.926044Z	info	path Base.Components.crds.K8S.PriorityClassName not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.926092Z	info	Checking for path Base.Components.crds.K8S.Env in IstioControlPlaneSpec
2019-09-27T16:27:15.926109Z	info	path Base.Components.crds.K8S.Env not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.926140Z	info	Manifest after k8s API settings:
# Resources for crds component

apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-operator-managed: Reconcile
    istio-injection: disabled
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: virtualservices.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
    shortNames:
    - vs
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.gateways
    description: The names of gateways and sidecars that should apply these routes
    name: Gateways
    type: string
  - JSONPath: .spec.hosts
    description: The destination hosts to which traffic is being sent
    name: Hosts
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: destinationrules.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: DestinationRule
    listKind: DestinationRuleList
    plural: destinationrules
    singular: destinationrule
    shortNames:
    - dr
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.host
    description: The name of a service from the service registry
    name: Host
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serviceentries.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: ServiceEntry
    listKind: ServiceEntryList
    plural: serviceentries
    singular: serviceentry
    shortNames:
    - se
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.hosts
    description: The hosts associated with the ServiceEntry
    name: Hosts
    type: string
  - JSONPath: .spec.location
    description: Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)
    name: Location
    type: string
  - JSONPath: .spec.resolution
    description: Service discovery mode for the hosts (NONE, STATIC, or DNS)
    name: Resolution
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gateways.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Gateway
    plural: gateways
    singular: gateway
    shortNames:
    - gw
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: envoyfilters.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: EnvoyFilter
    plural: envoyfilters
    singular: envoyfilter
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: clusterrbacconfigs.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ClusterRbacConfig
    plural: clusterrbacconfigs
    singular: clusterrbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: policies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: Policy
    plural: policies
    singular: policy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: meshpolicies.authentication.istio.io
  labels:
    app: istio-citadel
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: authentication.istio.io
  names:
    kind: MeshPolicy
    listKind: MeshPolicyList
    plural: meshpolicies
    singular: meshpolicy
    categories:
    - istio-io
    - authentication-istio-io
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpecBinding
    plural: httpapispecbindings
    singular: httpapispecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: httpapispecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: HTTPAPISpec
    plural: httpapispecs
    singular: httpapispec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecbindings.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpecBinding
    plural: quotaspecbindings
    singular: quotaspecbinding
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: quotaspecs.config.istio.io
  labels:
    app: istio-mixer
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: QuotaSpec
    plural: quotaspecs
    singular: quotaspec
    categories:
    - istio-io
    - apim-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rules.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: rule
    plural: rules
    singular: rule
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: attributemanifests.config.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: core
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: attributemanifest
    plural: attributemanifests
    singular: attributemanifest
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: rbacconfigs.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: RbacConfig
    plural: rbacconfigs
    singular: rbacconfig
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: serviceroles.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRole
    plural: serviceroles
    singular: servicerole
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: servicerolebindings.rbac.istio.io
  labels:
    app: mixer
    package: istio.io.mixer
    istio: rbac
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: ServiceRoleBinding
    plural: servicerolebindings
    singular: servicerolebinding
    categories:
    - istio-io
    - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
  additionalPrinterColumns:
  - JSONPath: .spec.roleRef.name
    description: The name of the ServiceRole object being referenced
    name: Reference
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: |-
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

      Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    name: Age
    type: date
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: adapters.config.istio.io
  labels:
    app: mixer
    package: adapter
    istio: mixer-adapter
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: adapter
    plural: adapters
    singular: adapter
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: instances.config.istio.io
  labels:
    app: mixer
    package: instance
    istio: mixer-instance
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: instance
    plural: instances
    singular: instance
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: templates.config.istio.io
  labels:
    app: mixer
    package: template
    istio: mixer-template
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: template
    plural: templates
    singular: template
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: handlers.config.istio.io
  labels:
    app: mixer
    package: handler
    istio: mixer-handler
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: config.istio.io
  names:
    kind: handler
    plural: handlers
    singular: handler
    categories:
    - istio-io
    - policy-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha2
      served: true
      storage: true
---


apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sidecars.networking.istio.io
  labels:
    app: istio-pilot
    chart: istio
    heritage: Tiller
    release: istio
spec:
  group: networking.istio.io
  names:
    kind: Sidecar
    plural: sidecars
    singular: sidecar
    categories:
    - istio-io
    - networking-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha3
      served: true
      storage: true
---


kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1beta1
metadata:
  name: authorizationpolicies.rbac.istio.io
  labels:
    app: istio-pilot
    istio: rbac
    heritage: Tiller
    release: istio
spec:
  group: rbac.istio.io
  names:
    kind: AuthorizationPolicy
    plural: authorizationpolicies
    singular: authorizationpolicy
    categories:
      - istio-io
      - rbac-istio-io
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---


2019-09-27T16:27:15.929595Z	info	Values translated from IstioControlPlane API:
certmanager:
  enabled: false
  namespace: istio-system
galley:
  enabled: false
  namespace: istio-system
gateways:
  istio-egressgateway:
    enabled: false
    namespace: istio-system
  istio-ingressgateway:
    enabled: true
    namespace: istio-system
global:
  configNamespace: istio-system
  enabled: true
  hub: gcr.io/istio-release
  istioNamespace: istio-system
  namespace: istio-system
  policyNamespace: istio-system
  prometheusNamespace: istio-system
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
mixer:
  policy:
    enabled: false
    namespace: istio-system
  telemetry:
    enabled: false
    namespace: istio-system
nodeagent:
  enabled: false
  namespace: istio-system
pilot:
  enabled: false
  namespace: istio-system
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enabled: false
  namespace: istio-system

2019-09-27T16:27:15.932702Z	info	Values from IstioControlPlaneSpec.Values:
certmanager:
  hub: quay.io/jetstack
  image: cert-manager-controller
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  imagePullPolicy: Always
  imagePullSecrets: []
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  priorityClassName: ""
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
      host: null
      port: null
    envoyMetricsService:
      enabled: false
      host: null
      port: null
    envoyStatsd:
      enabled: false
      host: null
      port: null
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources: null
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    annotations: null
    enabled: false
    hosts:
    - grafana.local
    tls: null
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    loadBalancerIP: null
    loadBalancerSourceRanges: null
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    grafanaURL: null
    jaegerURL: null
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    annotations: null
    enabled: false
    hosts:
    - kiali.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  prometheusNamespace: null
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    image: mixer
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  image: node-agent-k8s
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  deploymentLabels: null
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    annotations: null
    enabled: false
    hosts:
    - prometheus.local
    tls: null
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  image: sidecar_injector
  injectLabel: istio-injection
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    annotations: null
    enabled: false
    hosts: null
    tls: null
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""

2019-09-27T16:27:15.932771Z	info	Values from IstioControlPlaneSpec.UnvalidatedValues:
{}

2019-09-27T16:27:15.960619Z	info	Merged values:
certmanager:
  enabled: false
  hub: quay.io/jetstack
  image: cert-manager-controller
  namespace: istio-system
  tag: v0.6.2
citadel:
  dnsCerts:
    istio-pilot-service-account.istio-system: istio-pilot.istio-system
  enableNamespacesByDefault: true
  image: citadel
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: true
  trustDomain: cluster.local
clusterResources: true
galley:
  enabled: false
  namespace: istio-system
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
gateways:
  istio-egressgateway:
    autoscaleEnabled: true
    connectTimeout: 10s
    drainDuration: 45s
    enabled: false
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    namespace: istio-system
    ports:
    - name: http2
      port: 80
    - name: https
      port: 443
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/egressgateway-certs
      name: egressgateway-certs
      secretName: istio-egressgateway-certs
    - mountPath: /etc/istio/egressgateway-ca-certs
      name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
    zvpn:
      enabled: true
      suffix: global
  istio-ingressgateway:
    applicationPorts: ""
    autoscaleEnabled: true
    debug: info
    domain: ""
    enabled: true
    env:
      ISTIO_META_ROUTER_MODE: sni-dnat
    meshExpansionPorts:
    - name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    - name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    - name: tcp-dns-tls
      port: 853
      targetPort: 853
    namespace: istio-system
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
    - name: kiali
      port: 15029
      targetPort: 15029
    - name: prometheus
      port: 15030
      targetPort: 15030
    - name: grafana
      port: 15031
      targetPort: 15031
    - name: tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    secretVolumes:
    - mountPath: /etc/istio/ingressgateway-certs
      name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
    - mountPath: /etc/istio/ingressgateway-ca-certs
      name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
    telemetry_addon_gateways:
      grafana_gateway:
        desPort: 3000
        enabled: false
        name: grafana
        port: 15031
        tls: false
      kiali_gateway:
        desPort: 20001
        enabled: false
        name: kiali
        port: 15029
        tls: false
      prometheus_gateway:
        desPort: 9090
        enabled: false
        name: prometheus
        port: 15030
        tls: false
      tracing_gateway:
        desPort: 80
        enabled: false
        name: tracing
        port: 15032
        tls: false
    telemetry_domain_name: ""
    zvpn:
      enabled: true
      suffix: global
global:
  arch:
    amd64: 2
    ppc64le: 2
    s390x: 2
  configNamespace: istio-system
  configValidation: true
  controlPlaneSecurityEnabled: true
  defaultNodeSelector: {}
  defaultPodDisruptionBudget:
    enabled: true
  defaultResources:
    requests:
      cpu: 10m
  disablePolicyChecks: true
  enableHelmTest: false
  enableTracing: true
  enabled: true
  hub: gcr.io/istio-release
  imagePullPolicy: Always
  imagePullSecrets: []
  istioNamespace: istio-system
  k8sIngress:
    enableHttps: false
    enabled: false
    gatewayName: ingressgateway
  localityLbSetting:
    enabled: true
  logAsJson: false
  logging:
    level: default:info
  meshExpansion:
    enabled: false
    useILB: false
  meshNetworks: {}
  mtls:
    enabled: false
  multiCluster:
    enabled: false
  namespace: istio-system
  oneNamespace: false
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  policyCheckFailOpen: false
  policyNamespace: istio-system
  priorityClassName: ""
  prometheusNamespace: istio-system
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: ""
    accessLogFormat: ""
    autoInject: enabled
    clusterDomain: cluster.local
    componentLogLevel: misc:error
    concurrency: 2
    dnsRefreshRate: 300s
    enableCoreDump: false
    envoyAccessLogService:
      enabled: false
    envoyMetricsService:
      enabled: false
    envoyStatsd:
      enabled: false
    excludeIPRanges: ""
    excludeInboundPorts: ""
    excludeOutboundPorts: ""
    image: proxyv2
    includeIPRanges: '*'
    includeInboundPorts: '*'
    kubevirtInterfaces: ""
    logLevel: warning
    privileged: false
    readinessFailureThreshold: 30
    readinessInitialDelaySeconds: 1
    readinessPeriodSeconds: 2
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
    statusPort: 15020
    tracer: zipkin
  proxy_init:
    image: proxy_init
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 10Mi
  sds:
    enabled: false
    udsPath: ""
  securityNamespace: istio-system
  tag: release-1.3-latest-daily
  telemetryNamespace: istio-system
  tracer:
    datadog:
      address: $(HOST_IP):8126
    lightstep:
      accessToken: ""
      address: ""
      cacertPath: ""
      secure: true
    zipkin:
      address: ""
  trustDomain: ""
  useMCP: true
grafana:
  accessMode: ReadWriteMany
  contextPath: /grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  datasources:
    datasources.yaml:
      apiVersion: 1
  enabled: false
  env: {}
  envSecrets: {}
  image:
    repository: grafana/grafana
    tag: 6.1.6
  ingress:
    enabled: false
    hosts:
    - grafana.local
  nodeSelector: {}
  persist: false
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    enabled: false
    passphraseKey: passphrase
    secretName: grafana
    usernameKey: username
  service:
    annotations: {}
    externalPort: 3000
    name: http
    type: ClusterIP
  storageClassName: ""
  tolerations: []
kiali:
  contextPath: /kiali
  createDemoSecret: true
  dashboard:
    passphraseKey: passphrase
    secretName: kiali
    usernameKey: username
    viewOnlyMode: false
  enabled: false
  hub: docker.io/kiali
  ingress:
    enabled: false
    hosts:
    - kiali.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  security:
    cert_file: /kiali-cert/cert-chain.pem
    enabled: true
    private_key_file: /kiali-cert/key.pem
  tag: v1.1.0
mixer:
  adapters:
    kubernetesenv:
      enabled: true
    prometheus:
      enabled: true
      metricsExpiryDuration: 10m
    stackdriver:
      auth:
        apiKey: ""
        appCredentials: false
        serviceAccountPath: ""
      enabled: false
      tracer:
        enabled: false
        sampleProbability: 1
    stdio:
      enabled: false
      outputAsJson: false
    useAdapterCRDs: false
  policy:
    adapters:
      kubernetesenv:
        enabled: true
    enabled: false
    image: mixer
    namespace: istio-system
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
  telemetry:
    autoscaleEnabled: true
    enabled: false
    image: mixer
    loadshedding:
      latencyThreshold: 100ms
      mode: enforce
    namespace: istio-system
    nodeSelector: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    replicaCount: 1
    reportBatchMaxEntries: 100
    reportBatchMaxTime: 1s
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    sessionAffinityEnabled: false
    tolerations: []
    useMCP: true
nodeagent:
  enabled: false
  image: node-agent-k8s
  namespace: istio-system
pilot:
  appNamespaces: []
  autoscaleEnabled: true
  autoscaleMax: 5
  autoscaleMin: 1
  configMap: true
  configNamespace: istio-config
  cpu:
    targetAverageUtilization: 80
  enabled: false
  env:
    GODEBUG: gctrace=1
  image: pilot
  ingress:
    ingressClass: istio
    ingressControllerMode: "OFF"
    ingressService: istio-ingressgateway
  keepaliveMaxServerConnectionAge: 30m
  meshNetworks:
    networks: {}
  namespace: istio-system
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  policy:
    enabled: false
  replicaCount: 1
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  telemetry:
    enabled: true
  tolerations: []
  traceSampling: 1
  useMCP: true
prometheus:
  contextPath: /prometheus
  enabled: true
  hub: docker.io/prom
  ingress:
    enabled: false
    hosts:
    - prometheus.local
  nodeSelector: {}
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  replicaCount: 1
  retention: 6h
  scrapeInterval: 15s
  security:
    enabled: true
  tag: v2.8.0
  tolerations: []
security:
  enabled: false
  namespace: istio-system
sidecarInjectorWebhook:
  enableNamespacesByDefault: false
  enabled: false
  image: sidecar_injector
  injectLabel: istio-injection
  namespace: istio-system
  rewriteAppHTTPProbe: false
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  selfSigned: false
tracing:
  enabled: false
  ingress:
    enabled: false
  jaeger:
    accessMode: ReadWriteMany
    hub: docker.io/jaegertracing
    memory:
      max_traces: 50000
    persist: false
    spanStorageType: badger
    storageClassName: ""
    tag: 1.12
  nodeSelector: {}
  opencensus:
    exporters:
      stackdriver:
        enable_tracing: true
    hub: docker.io/omnition
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 400Mi
    tag: 0.1.9
  podAntiAffinityLabelSelector: []
  podAntiAffinityTermLabelSelector: []
  provider: jaeger
  service:
    annotations: {}
    externalPort: 9411
    name: http
    type: ClusterIP
  zipkin:
    hub: docker.io/openzipkin
    javaOptsHeap: 700
    maxSpans: 500000
    node:
      cpus: 2
    probeStartupDelay: 200
    queryPort: 9411
    resources:
      limits:
        cpu: 300m
        memory: 900Mi
      requests:
        cpu: 150m
        memory: 900Mi
    tag: 2.14.2
version: ""


2019-09-27T16:27:15.968112Z	info	Initial manifest with merged values:

# Main Gateway. Apps must bind to NAMESPACE/ingressgateway
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    release: istio
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
      - "*"
    # Additional ports in gateaway for the ingressPorts - apps using dedicated port instead of hostname


---




---


---

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
    istio: ingressgateway
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      release: istio
      istio: ingressgateway

---



---

apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingressgateway
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: default
  namespace: istio-system
  labels:
    release: istio
spec:
  egress:
    - hosts:
        - "*/*"

---

apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  annotations:
  labels:
    app: istio-ingressgateway
    release: istio
spec:
  type: LoadBalancer
  selector:
    app: istio-ingressgateway
  ports:
    -
      name: status-port
      port: 15020
      targetPort: 15020
    -
      name: http2
      port: 80
      targetPort: 80
    -
      name: https
      port: 443
    -
      name: kiali
      port: 15029
      targetPort: 15029
    -
      name: prometheus
      port: 15030
      targetPort: 15030
    -
      name: grafana
      port: 15031
      targetPort: 15031
    -
      name: tracing
      port: 15032
      targetPort: 15032
    -
      name: tls
      port: 15443
      targetPort: 15443
  
---

# Template for telemetry addon gateways







---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingressgateway-service-account
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
---


# TODO: range TCP ports, add ports
# 




---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: istio-ingressgateway
        istio: ingressgateway
        heritage: Tiller
        release: istio
        chart: gateways
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-ingressgateway-service-account
      containers:
        - name: istio-proxy
          image: "gcr.io/istio-release/proxyv2:release-1.3-latest-daily"
          imagePullPolicy: Always
          ports:
            - containerPort: 15020
            - containerPort: 80
            - containerPort: 443
            - containerPort: 15029
            - containerPort: 15030
            - containerPort: 15031
            - containerPort: 15032
            - containerPort: 15443
            - containerPort: 15011
            - containerPort: 8060
            - containerPort: 853
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
          args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --proxyLogLevel=warning
          - --proxyComponentLogLevel=misc:error
          - --log_output_level=default:info
          - --drainDuration
          - '45s' #drainDuration
          - --parentShutdownDuration
          - '1m0s' #parentShutdownDuration
          - --connectTimeout
          - '10s' #connectTimeout
          - --serviceCluster
          - istio-ingressgateway
          - --zipkinAddress
          - zipkin.istio-system:9411
          - --proxyAdminPort
          - "15000"
          - --statusPort
          - "15020"
          - --controlPlaneAuthPolicy
          - MUTUAL_TLS
          - --discoveryAddress
          - istio-pilot.istio-system:15011
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
            
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          volumeMounts:
          
          - name: istio-certs
            mountPath: /etc/certs
            readOnly: true
          - name: ingressgateway-certs
            mountPath: "/etc/istio/ingressgateway-certs"
            readOnly: true
          - name: ingressgateway-ca-certs
            mountPath: "/etc/istio/ingressgateway-ca-certs"
            readOnly: true
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.istio-ingressgateway-service-account
          optional: true
      - name: ingressgateway-certs
        secret:
          secretName: "istio-ingressgateway-certs"
          optional: true
      - name: ingressgateway-ca-certs
        secret:
          secretName: "istio-ingressgateway-ca-certs"
          optional: true
      affinity:      
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x      

---


---


---

---



2019-09-27T16:27:15.969773Z	info	Manifest contains the following objects:
2019-09-27T16:27:15.969805Z	info	Gateway:ingressgateway
2019-09-27T16:27:15.969817Z	info	PodDisruptionBudget:ingressgateway
2019-09-27T16:27:15.969828Z	info	HorizontalPodAutoscaler:istio-ingressgateway
2019-09-27T16:27:15.969848Z	info	Sidecar:default
2019-09-27T16:27:15.969855Z	info	Service:istio-ingressgateway
2019-09-27T16:27:15.969863Z	info	ServiceAccount:istio-ingressgateway-service-account
2019-09-27T16:27:15.969876Z	info	Deployment:istio-ingressgateway
2019-09-27T16:27:15.969962Z	info	Checking for path Gateways.Components.IngressGateway.K8S.Env in IstioControlPlaneSpec
2019-09-27T16:27:15.969987Z	info	path Gateways.Components.IngressGateway.K8S.Env not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.970086Z	info	Checking for path Gateways.Components.IngressGateway.K8S.PriorityClassName in IstioControlPlaneSpec
2019-09-27T16:27:15.970113Z	info	path Gateways.Components.IngressGateway.K8S.PriorityClassName is empty string, skip mapping.
2019-09-27T16:27:15.970187Z	info	Checking for path Gateways.Components.IngressGateway.K8S.NodeSelector in IstioControlPlaneSpec
2019-09-27T16:27:15.970215Z	info	path Gateways.Components.IngressGateway.K8S.NodeSelector not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.970291Z	info	Checking for path Gateways.Components.IngressGateway.K8S.PodDisruptionBudget in IstioControlPlaneSpec
2019-09-27T16:27:15.970316Z	info	path Gateways.Components.IngressGateway.K8S.PodDisruptionBudget not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.970383Z	info	Checking for path Gateways.Components.IngressGateway.K8S.PodAnnotations in IstioControlPlaneSpec
2019-09-27T16:27:15.970408Z	info	path Gateways.Components.IngressGateway.K8S.PodAnnotations not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.970468Z	info	Checking for path Gateways.Components.IngressGateway.K8S.ReadinessProbe in IstioControlPlaneSpec
2019-09-27T16:27:15.970496Z	info	path Gateways.Components.IngressGateway.K8S.ReadinessProbe not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.970556Z	info	Checking for path Gateways.Components.IngressGateway.K8S.ReplicaCount in IstioControlPlaneSpec
2019-09-27T16:27:15.970576Z	info	path Gateways.Components.IngressGateway.K8S.ReplicaCount is int 0, skip mapping.
2019-09-27T16:27:15.970647Z	info	Checking for path Gateways.Components.IngressGateway.K8S.Affinity in IstioControlPlaneSpec
2019-09-27T16:27:15.970671Z	info	path Gateways.Components.IngressGateway.K8S.Affinity not found in IstioControlPlaneSpec, skip mapping.
2019-09-27T16:27:15.970735Z	info	Checking for path Gateways.Components.IngressGateway.K8S.HpaSpec in IstioControlPlaneSpec
2019-09-27T16:27:15.971338Z	info	path has value in IstioControlPlaneSpec, mapping to output path [HorizontalPodAutoscaler:istio-ingressgateway].spec
2019-09-27T16:27:15.972675Z	info	Checking for path Gateways.Components.IngressGateway.K8S.ImagePullPolicy in IstioControlPlaneSpec
2019-09-27T16:27:15.972733Z	info	path Gateways.Components.IngressGateway.K8S.ImagePullPolicy is empty string, skip mapping.
2019-09-27T16:27:15.972837Z	info	Checking for path Gateways.Components.IngressGateway.K8S.Resources in IstioControlPlaneSpec
2019-09-27T16:27:15.973081Z	info	path has value in IstioControlPlaneSpec, mapping to output path [Deployment:istio-ingressgateway].spec.template.spec.containers.[name:istio-proxy].resources
2019-09-27T16:27:15.982584Z	info	Manifest after k8s API settings:
# Resources for IngressGateway component

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    release: istio
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
      - "*"
    # Additional ports in gateaway for the ingressPorts - apps using dedicated port instead of hostname
---


apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
    istio: ingressgateway
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      release: istio
      istio: ingressgateway
---


apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: istio-ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      targetAverageUtilization: 80
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingressgateway

---


apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: default
  namespace: istio-system
  labels:
    release: istio
spec:
  egress:
    - hosts:
        - "*/*"
---


apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  annotations:
  labels:
    app: istio-ingressgateway
    release: istio
spec:
  type: LoadBalancer
  selector:
    app: istio-ingressgateway
  ports:
    -
      name: status-port
      port: 15020
      targetPort: 15020
    -
      name: http2
      port: 80
      targetPort: 80
    -
      name: https
      port: 443
    -
      name: kiali
      port: 15029
      targetPort: 15029
    -
      name: prometheus
      port: 15030
      targetPort: 15030
    -
      name: grafana
      port: 15031
      targetPort: 15031
    -
      name: tracing
      port: 15032
      targetPort: 15032
    -
      name: tls
      port: 15443
      targetPort: 15443
---


apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingressgateway-service-account
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    release: istio
---


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: istio-ingressgateway
        chart: gateways
        heritage: Tiller
        istio: ingressgateway
        release: istio
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        - --log_output_level=default:info
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --serviceCluster
        - istio-ingressgateway
        - --zipkinAddress
        - zipkin.istio-system:9411
        - --proxyAdminPort
        - "15000"
        - --statusPort
        - "15020"
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --discoveryAddress
        - istio-pilot.istio-system:15011
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        image: gcr.io/istio-release/proxyv2:release-1.3-latest-daily
        imagePullPolicy: Always
        name: istio-proxy
        ports:
        - containerPort: 15020
        - containerPort: 80
        - containerPort: 443
        - containerPort: 15029
        - containerPort: 15030
        - containerPort: 15031
        - containerPort: 15032
        - containerPort: 15443
        - containerPort: 15011
        - containerPort: 8060
        - containerPort: 853
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          readOnly: true
      serviceAccountName: istio-ingressgateway-service-account
      volumes:
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.istio-ingressgateway-service-account
      - name: ingressgateway-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-certs
      - name: ingressgateway-ca-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-ca-certs

---


2019-09-27T16:27:15.982677Z	info	Applying manifests for these components:
2019-09-27T16:27:15.982718Z	info	- crds
2019-09-27T16:27:15.982864Z	info	- IngressGateway
2019-09-27T16:27:15.982909Z	info	Component dependencies tree: 
crds
  Citadel
  Injector
  IngressGateway
  Pilot
  Policy
  Galley
  EgressGateway
  Telemetry
  NodeAgent
  CertManager

2019-09-27T16:27:15.984744Z	info	IngressGateway is waiting on parent dependency...
2019-09-27T16:27:15.990604Z	info	kubectl applying manifest for component crds
2019-09-27T16:27:15.991287Z	info	applying to namespace :
kubectl apply --force --selector operator.istio.io/managed=Reconcile -f - <use --verbose to see manifest string> 


2019-09-27T16:27:17.653038Z	info	kubectl apply success
2019-09-27T16:27:17.654170Z	info	applying to namespace :
kubectl apply --force --selector operator.istio.io/managed=Reconcile -f - <use --verbose to see manifest string> 


2019-09-27T16:27:18.214186Z	info	kubectl apply success
2019-09-27T16:27:18.214347Z	info	finished applying manifest for component crds
2019-09-27T16:27:18.221116Z	info	unblocking child dependency Pilot.
2019-09-27T16:27:18.221174Z	info	unblocking child dependency Policy.
2019-09-27T16:27:18.221206Z	info	unblocking child dependency Telemetry.
2019-09-27T16:27:18.221219Z	info	unblocking child dependency Galley.
2019-09-27T16:27:18.221230Z	info	unblocking child dependency Citadel.
2019-09-27T16:27:18.221241Z	info	unblocking child dependency NodeAgent.
2019-09-27T16:27:18.221252Z	info	unblocking child dependency CertManager.
2019-09-27T16:27:18.221271Z	info	unblocking child dependency Injector.
2019-09-27T16:27:18.221282Z	info	unblocking child dependency IngressGateway.
2019-09-27T16:27:18.221306Z	info	unblocking child dependency EgressGateway.
2019-09-27T16:27:18.221335Z	info	Parent dependency for IngressGateway has unblocked, proceeding.
2019-09-27T16:27:18.223384Z	info	kubectl applying manifest for component IngressGateway
2019-09-27T16:27:18.223834Z	info	applying to namespace istio-system:
kubectl apply -n istio-system --force --selector operator.istio.io/managed=Reconcile -f - <use --verbose to see manifest string> 


2019-09-27T16:27:20.786596Z	info	kubectl apply success
2019-09-27T16:27:20.786689Z	info	finished applying manifest for component IngressGateway
2019-09-27T16:27:20.790573Z	info	
Output for component crds:
==========================

2019-09-27T16:27:20.790837Z	info	Stdout:
customresourcedefinition.apiextensions.k8s.io/adapters.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/attributemanifests.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/authorizationpolicies.rbac.istio.io created
customresourcedefinition.apiextensions.k8s.io/clusterrbacconfigs.rbac.istio.io created
customresourcedefinition.apiextensions.k8s.io/destinationrules.networking.istio.io created
customresourcedefinition.apiextensions.k8s.io/envoyfilters.networking.istio.io created
customresourcedefinition.apiextensions.k8s.io/gateways.networking.istio.io created
customresourcedefinition.apiextensions.k8s.io/handlers.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/httpapispecbindings.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/httpapispecs.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/instances.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/meshpolicies.authentication.istio.io created
customresourcedefinition.apiextensions.k8s.io/policies.authentication.istio.io created
customresourcedefinition.apiextensions.k8s.io/quotaspecbindings.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/quotaspecs.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/rbacconfigs.rbac.istio.io created
customresourcedefinition.apiextensions.k8s.io/rules.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/serviceentries.networking.istio.io created
customresourcedefinition.apiextensions.k8s.io/servicerolebindings.rbac.istio.io created
customresourcedefinition.apiextensions.k8s.io/serviceroles.rbac.istio.io created
customresourcedefinition.apiextensions.k8s.io/sidecars.networking.istio.io created
customresourcedefinition.apiextensions.k8s.io/templates.config.istio.io created
customresourcedefinition.apiextensions.k8s.io/virtualservices.networking.istio.io created

customresourcedefinition.apiextensions.k8s.io/adapters.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/attributemanifests.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/authorizationpolicies.rbac.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/clusterrbacconfigs.rbac.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/destinationrules.networking.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/envoyfilters.networking.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/gateways.networking.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/handlers.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/httpapispecbindings.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/httpapispecs.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/instances.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/meshpolicies.authentication.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/policies.authentication.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/quotaspecbindings.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/quotaspecs.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/rbacconfigs.rbac.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/rules.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/serviceentries.networking.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/servicerolebindings.rbac.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/serviceroles.rbac.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/sidecars.networking.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/templates.config.istio.io unchanged
customresourcedefinition.apiextensions.k8s.io/virtualservices.networking.istio.io unchanged
namespace/istio-system created


2019-09-27T16:27:20.790897Z	info	
Output for component IngressGateway:
====================================

2019-09-27T16:27:20.790914Z	info	Stdout:

serviceaccount/istio-ingressgateway-service-account created
deployment.apps/istio-ingressgateway created
gateway.networking.istio.io/ingressgateway created
sidecar.networking.istio.io/default created
poddisruptionbudget.policy/ingressgateway created
horizontalpodautoscaler.autoscaling/istio-ingressgateway created
service/istio-ingressgateway created


